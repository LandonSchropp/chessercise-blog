{"version":3,"file":"component---src-templates-article-template-tsx-b49416b8cba293048fac.js","mappings":"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","sources":["webpack://chessercise-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://chessercise-blog/./node_modules/@babel/runtime/helpers/construct.js","webpack://chessercise-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://chessercise-blog/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://chessercise-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://chessercise-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://chessercise-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://chessercise-blog/./node_modules/gatsby-plugin-mdx/index.js","webpack://chessercise-blog/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/isDate/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/toDate/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/isValid/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/defaultOptions/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/_lib/defaultLocale/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://chessercise-blog/./node_modules/date-fns/esm/format/index.js","webpack://chessercise-blog/./src/components/article.tsx","webpack://chessercise-blog/./src/templates/article-template.tsx"],"sourcesContent":["var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","var defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = getUTCWeekYear(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, options);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n};\n\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n};\n\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n};\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // TODO: Remove String()\n\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import defaultLocale from \"../../locale/en-US/index.js\";\nexport default defaultLocale;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import isValid from \"../isValid/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  var matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}","import { format } from \"date-fns\";\nimport { Link } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport { Article as ArticleType } from \"../types\";\n\ntype ArticleProps = {\n  article: ArticleType,\n  content: string\n}\n\nexport function Article({ article, content }: ArticleProps) {\n  return <article className=\"article\">\n    <Helmet>\n      <meta name=\"Author\" content=\"Landon Schropp\" />\n      <meta name=\"description\" content={ article.description } />\n    </Helmet>\n    <header className=\"my-4 text-center text-scriptInk\">\n      <div className=\"italic\">\n        <Link className=\"text-inherit no-underline hover:underline\" to=\"/\">Chessercise</Link>\n      </div>\n      <h1 className=\"my-0 font-serif font-bold\">{ article.title }</h1>\n      <div className=\"block my-1 text-center italic\">\n        <span>Landon Schropp</span>\n        { \" \" }\n        <span>•</span>\n        { \" \" }\n        <time dateTime={ article.date }>\n          { format(new Date(article.date), \"PPP\") }\n        </time>\n      </div>\n      <hr className=\"w-20 mx-auto my-4\" />\n    </header>\n\n    <MDXRenderer>\n      { content }\n    </MDXRenderer>\n  </article>;\n}\n","import { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { Article } from \"../components/article\";\nimport { Layout } from \"../components/layout\";\n\n// NOTE: I'm using $slug here instead of ID because the transformed article node is no longer tied\n// to the MDX node.\nexport const query = graphql`\n  query Article($slug: String!) {\n    mdx(frontmatter: {Slug: {eq: $slug}}) {\n      body\n    }\n    article(slug: {eq: $slug}) {\n      title\n      slug\n      description\n      date\n      published\n    }\n  }\n`;\n\nexport default function ArticleTemplate({ data }) {\n  return <Layout\n    title={ `Landon Schropp - ${ data.article.title }` }\n    description={ data.article.description }\n  >\n    <Article article={ data.article } content={ data.mdx.body } />\n  </Layout>;\n}\n\nArticleTemplate.propTypes = {\n  data: PropTypes.object\n};\n"],"names":["arrayLikeToArray","module","exports","arr","Array","isArray","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","keys","values","map","fn","createElement","requiredArgs","required","length","isDate","Date","toString","toDate","argument","argStr","getTime","console","warn","Error","stack","NaN","isValid","dirtyDate","date","isNaN","Number","toInteger","dirtyNumber","number","Math","ceil","floor","addMilliseconds","dirtyAmount","timestamp","amount","subMilliseconds","MILLISECONDS_IN_DAY","startOfUTCISOWeek","weekStartsOn","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","defaultOptions","getDefaultOptions","startOfUTCWeek","options","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","locale","RangeError","getUTCWeekYear","_options$firstWeekCon","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","addLeadingZeros","targetLength","sign","output","abs","y","token","signedYear","M","month","getUTCMonth","String","d","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","dayPeriodEnum","G","localize","era","width","ordinalNumber","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","quarter","context","q","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","c","i","isoDayOfWeek","dayPeriod","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","originalDate","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","longFormatters","p","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","concat","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","result","tokenValue","addSuffix","comparison","buildFormatLongFn","undefined","defaultWidth","formats","full","long","medium","short","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","argumentCallback","rem100","narrow","abbreviated","wide","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","findIndex","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","parsePattern","parseInt","parseResult","any","index","code","formatDistance","formatRelative","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","matched","Article","article","content","className","Helmet","name","description","Link","to","title","dirtyFormatStr","_ref4","_options$locale2","_options$locale2$opti","_ref5","_ref6","_ref7","_options$locale3","_options$locale3$opti","_defaultOptions$local3","_defaultOptions$local4","formatStr","defaultLocale","formatterOptions","substring","firstCharacter","longFormatter","join","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","ArticleTemplate","data","Layout","body"],"sourceRoot":""}