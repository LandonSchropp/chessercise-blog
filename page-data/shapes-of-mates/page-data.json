{"componentChunkName":"component---src-templates-article-template-tsx","path":"/shapes-of-mates","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The Shapes of Mates\",\n  \"Chessboard\": \"3/1k1/Q\\n3x3\\nBa1 Rb3 Rc2\",\n  \"Published\": true,\n  \"Slug\": \"shapes-of-mates\",\n  \"Description\": \"Thereâ€™s a hidden pattern underlying common checkmates.\",\n  \"Date\": {\n    \"start\": \"2022-07-25T00:00:00.000Z\",\n    \"end\": null,\n    \"time_zone\": null\n  }\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ColumnList = makeShortcode(\"ColumnList\");\nvar Column = makeShortcode(\"Column\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Lately, I\\u2019ve been working my way through the excellent book \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://amazon.com/gp/product/1579125549\"\n  }, \"Chess\"), \" by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/L%C3%A1szl%C3%B3_Polg%C3%A1r\"\n  }, \"L\\xE1szl\\xF3 Polg\\xE1r\"), \" (the father of the famed Polg\\xE1r sisters \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Susan_Polgar\"\n  }, \"Zsuzsa\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Zs%C3%B3fia_Polg%C3%A1r\"\n  }, \"Zs\\xF3fia\"), \", and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Judit_Polg%C3%A1r\"\n  }, \"Judit\"), \").\"), mdx(\"p\", null, \"This book is full of clever mating compositions which require the coordination of several pieces in order to produce a checkmate.\"), mdx(\"p\", null, \"As an example, take a look at number 325 from the book, a mate-in-two.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/4N1K1/8/8/5k2/8/8/3BQ3 w - - 0 1\\n{Ern\\xF5 Szentgy\\xF6rgyi, 1933}\\n\")), mdx(\"p\", null, \"At first, this position feels completely overwhelming. There are \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"so many possible moves\"), \". Which piece should move? Where should you start?\"), mdx(\"p\", null, \"When I started working through these problems, I struggled to make much progress. They\\u2019re hard to intuit and are unlike any mating patterns I\\u2019ve seen before.\"), mdx(\"p\", null, \"However, I\\u2019ve recently started applying an approach that helps to simplify these problems. You can apply this approach to your games to unlock new and exciting checkmating possibilities.\"), mdx(\"h2\", null, \"The Back-Rank Mate\"), mdx(\"p\", null, \"One of the most important ways to improve at chess is to recognize \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"patterns\"), \"\\u2014mental shortcuts that let us short-circuit thinking and jump straight to the answer. If you\\u2019ve played chess for a while, you\\u2019ve probably learned and applied several checkmating patterns.\"), mdx(\"p\", null, \"One of the first patterns most people learn is the humble \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Back-rank_checkmate\"\n  }, \"back-rank mate\"), \", where your opponent\\u2019s king is blocked from exiting the first or eighth rank, and you checkmate them with a rook.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/ppp5/8/8 w - - 0 1\\n4x4\\n\")), mdx(\"p\", null, \"But does this pattern have to occur in \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"exactly\"), \" this formation? What if the pawn were swapped by another piece, such as a black rook?\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/rpp5/8/8 w - - 0 1\\n4x4\\n\")), mdx(\"p\", null, \"The pattern still holds! As long as the piece can\\u2019t block white\\u2019s rook, Black is still mated.\"), mdx(ColumnList, {\n    mdxType: \"ColumnList\"\n  }, mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/bpp5/8/8 w - - 0 1\\n4x4\\n\"))), mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/qpp5/8/8 w - - 0 1\\n4x4\\n\")))), mdx(\"p\", null, \"What\\u2019s crazy about this is the squares in front of the enemy king don\\u2019t need to be \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"occupied\"), \" at all\\u2014they just need to be \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"controlled\"), \". Take this example.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/r1p5/8/N7 w - - 0 1\\n4x4\\n\")), mdx(\"p\", null, \"Here black is just as checkmated, even though one of the squares in front of the king is empty.\"), mdx(\"p\", null, \"Let\\u2019s look at one more.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/8/1K6/8 w - - 0 1\\n4x4\\n\")), mdx(\"p\", null, \"Same idea\\u2014the king is trapped against the back rank and can\\u2019t escape.\"), mdx(\"h2\", null, \"Extracting a Pattern\"), mdx(\"p\", null, \"If we think about this hard enough, we\\u2019ll see a generic pattern start to emerge.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/8/8/8 w - - 0 1\\n4x4 Ra3 Rb3 Rc3\\n\")), mdx(\"p\", null, \"The red highlights represent squares in the pattern that the black king can\\u2019t move to, either because they\\u2019re controlled by one of White\\u2019s pieces, or because they\\u2019re occupied by one of Black\\u2019s.\"), mdx(\"p\", null, \"If we take a step back and stop thinking about the specific configuration, we can see the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"shape of the mate\"), \"\\u2014the combination of the enemy king, the key piece or pieces, and the controlled squares that together culminate in a checkmate. As long as these conditions are met, and assuming the check can\\u2019t be blocked in some way, then it\\u2019s a checkmate!\"), mdx(\"p\", null, \"If we overlay this shape on all of the previously mentioned mates, then the pattern is clear.\"), mdx(ColumnList, {\n    mdxType: \"ColumnList\"\n  }, mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/ppp5/8/8 w - - 0 1\\n4x4 Ra3 Rb3 Rc3\\n\"))), mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/rpp5/8/8 w - - 0 1\\n4x4 Ra3 Rb3 Rc3\\n\")))), mdx(ColumnList, {\n    mdxType: \"ColumnList\"\n  }, mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/bpp5/8/8 w - - 0 1\\n4x4 Ra3 Rb3 Rc3\\n\"))), mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/qpp5/8/8 w - - 0 1\\n4x4 Ra3 Rb3 Rc3\\n\")))), mdx(ColumnList, {\n    mdxType: \"ColumnList\"\n  }, mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/r1p5/8/N7 w - - 0 1\\n4x4 Ra3 Rb3 Rc3 Ya1b3\\n\"))), mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1k1R4/8/1K6/8 w - - 0 1\\n4x4 Ra3 Rb3 Rc3 Yb2a3 Yb2b3 Yb2c3\\n\")))), mdx(\"h2\", null, \"Other Patterns\"), mdx(\"p\", null, \"Once you start thinking about mates as shapes, it\\u2019s much easier to spot them in other situations. For example, check out Anastasia\\u2019s Mate.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/N1pk4/8/3R4 w - - 0 1\\n4x4\\n\")), mdx(\"p\", null, \"Look familiar? If you look closely, you can see that this is simply a specialized case of the back rank shape.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/N1pk4/8/3R4 w - - 0 1\\n4x4 Rc2 Rc3 Rc4\\n\")), mdx(\"p\", null, \"Another example is the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Checkmate_pattern#Swallow's_tail_mate_(gu%C3%A9ridon_mate)\"\n  }, \"Swallow\\u2019s Tail Mate\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1p1p4/2k5/2Q5/2K5 w - - 0 1\\n4x4\\n\")), mdx(\"p\", null, \"Here we can extract a new shape. (The blue highlight in the pattern indicates that the black king can\\u2019t capture the piece because it\\u2019s protected.)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/8/1k6/1Q6 w - - 0 1\\n3x3 Bb1 Ra3 Rc3\\n\")), mdx(\"p\", null, \"Like the back rank shape, it simply doesn\\u2019t matter what\\u2019s happening in the red squares, as long as these squares are occupied by Black\\u2019s pieces or controlled by White\\u2019s pieces.\"), mdx(\"p\", null, \"All of these are examples follow the Swallow\\u2019s Tail shape.\"), mdx(ColumnList, {\n    mdxType: \"ColumnList\"\n  }, mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/1r1r4/2k5/2Q5/1P6 w - - 0 1\\n4x4 Bc2 Rb4 Rd4\\n\"))), mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/3p4/B1k5/2Q5/1B6 w - - 0 1\\n4x4 Bc2 Rb4 Rd4\\n\")))), mdx(ColumnList, {\n    mdxType: \"ColumnList\"\n  }, mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/b7/1k6/1QR5 w - - 0 1\\n3x3 Bb1 Ra3 Rc3\\n\"))), mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/8/1k6/1QQ5 w - - 0 1\\n3x3 Bb1 Ra3 Rc3\\n\")))), mdx(\"p\", null, \"As a final example, let\\u2019s check out the Swallow\\u2019s Tail Mate\\u2019s cousin, the Epaulette Mate.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/1k6/8/1Q6 b - - 3 2\\n3x3 Ra3 Rc3\\n\")), mdx(\"p\", null, \"This shape applies to a variety of positions in a very similar fashion.\"), mdx(ColumnList, {\n    mdxType: \"ColumnList\"\n  }, mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/rkr5/8/1Q6 b - - 3 2\\n3x3 Ra3 Rc3\\n\"))), mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/2r5/Q1k5/2p5 b - - 3 2\\n3x3 Rc1 Rc3\\n\")))), mdx(ColumnList, {\n    mdxType: \"ColumnList\"\n  }, mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/2kr4/B7/2Q5/8 b - - 3 2\\n4x4 Rb4 Rd4\\n\"))), mdx(Column, {\n    mdxType: \"Column\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/3p4/1Q1k4/3n4/3R4 b - - 3 2\\n4x4 Rd2 Rd4\\n\")))), mdx(\"p\", null, \"Neat, right?\"), mdx(\"h2\", null, \"Removing the Edges\"), mdx(\"p\", null, \"The Back-Rank Mate and the Epaulette Mate shown above both rely on the edge of the board. But there doesn\\u2019t \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"have\"), \" to be a board edge for the same patterns to work.\"), mdx(\"p\", null, \"Instead, if all of the squares where there would be an edge are \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"controlled\"), \", then the shape still applies.\"), mdx(\"p\", null, \"Take the Back-Rank Mate without the back rank. If the squares behind the king are still controlled, then it\\u2019s \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"still a checkmate\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/1k1R4/8/8 b - - 3 2\\n4x4 Ra4 Rb4 Rc4 Ra2 Rb2 Rc2\\n\")), mdx(\"p\", null, \"This variation of the pattern is known as a Corridor Mate.\"), mdx(\"p\", null, \"Same idea with the Epaulette Mate. If we\\u2019re not on the edge of the board, but the squares are still controlled, then problem solved.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/8/8/8/8/Q1k5/8/8 b - - 3 2\\n4x4 Rc2 Rc4 Rd2 Rd3 Rd4\\n\")), mdx(\"h2\", null, \"Looping Back\"), mdx(\"p\", null, \"What does all of this have to do with problem number 325? Let\\u2019s take a closer look.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/4N1K1/8/8/5k2/8/8/3BQ3 w - - 0 1\\n\")), mdx(\"p\", null, \"The key to solving this is recognizing that we\\u2019re very close to a couple of the patterns mentioned above. Black\\u2019s king is very restricted, and there are only a few options for it to move.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/4N1K1/8/8/5k2/8/8/3BQ3 w - - 0 1\\nRe3 Re4 Re5 Rf3 Rf5 Rg3 Rg4 Yd1f3 Yd1g4 Ye1e3 Ye1e4 Ye1e5 Ye7f5 Ye1g3 Yd1g4\\n\")), mdx(\"p\", null, \"After some digging, you may notice the move Ng6+. Here, white only has two options.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/6K1/6N1/8/5k2/8/8/3BQ3 b - - 1 1\\nYf4f5 Yf4g5\\n\")), mdx(\"p\", null, \"In the first case of Kf5, we have a nice application of the Swallow\\u2019s Tail shape.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/6K1/6N1/4Qk2/8/8/8/3B4 b - - 3 2\\nRg4 Rg6 Be5 Yg7g6 Yd1g4\\n\")), mdx(\"p\", null, \"In the second, we have a lovely application of our Epaulette shape.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\",\n    \"metastring\": \"text\",\n    \"text\": true\n  }, \"8/6K1/6N1/4Q1k1/8/8/8/3B4 b - - 3 2\\nRg4 Rg6 Rh4 Rh5 Rh6 Yg7g6 Yg7h6 Yd1g4 Yd1h5 Yg6h4\\n\")), mdx(\"p\", null, \"The next time you\\u2019re trying to find a checkmate, take a step back, observe the occupied and controlled squares, and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"look for the shape\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"article":{"title":"The Shapes of Mates","slug":"shapes-of-mates","description":"Thereâ€™s a hidden pattern underlying common checkmates.","date":"2022-07-25","published":true}},"pageContext":{"slug":"shapes-of-mates"}},"staticQueryHashes":[]}